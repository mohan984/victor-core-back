# Generated by Django 5.2.5 on 2025-10-28 12:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SubExam',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_exams', to='exams.exam')),
            ],
        ),
        migrations.CreateModel(
            name='StudyNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sub_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_notes', to='exams.subexam')),
            ],
        ),
        migrations.CreateModel(
            name='MindMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='mind_maps/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sub_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mind_maps', to='exams.subexam')),
            ],
        ),
        migrations.CreateModel(
            name='Flashcard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('front_content', models.TextField()),
                ('back_content', models.TextField()),
                ('sub_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to='exams.subexam')),
            ],
        ),
        migrations.CreateModel(
            name='TestCard',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('test_type', models.CharField(choices=[('SUBJECT', 'Subject Wise'), ('FULL', 'Full Length'), ('CHALLENGE', 'Challenge Test'), ('QUIZ', 'Weekly Quiz')], default='SUBJECT', max_length=10)),
                ('order', models.PositiveIntegerField(default=1, help_text='Sequence for unlocking subject-wise tests.')),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('price_points', models.PositiveIntegerField(default=0, help_text='Reward points required to unlock this test.')),
                ('reward_points', models.PositiveIntegerField(default=0, help_text='Reward points earned for completing this test (for challenges and quizzes).')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the test is available for users.')),
                ('sub_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_cards', to='exams.subexam')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('option_a', models.CharField(max_length=255)),
                ('option_b', models.CharField(max_length=255)),
                ('option_c', models.CharField(max_length=255)),
                ('option_d', models.CharField(max_length=255)),
                ('correct_option', models.CharField(choices=[('A', 'Option A'), ('B', 'Option B'), ('C', 'Option C'), ('D', 'Option D')], max_length=1)),
                ('section', models.CharField(default='General', max_length=100)),
                ('topic', models.CharField(blank=True, max_length=100)),
                ('difficulty', models.CharField(choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], default='Medium', max_length=10)),
                ('positive_marks', models.FloatField(default=1.0)),
                ('negative_marks', models.FloatField(default=0.25)),
                ('test_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exams.testcard')),
            ],
        ),
        migrations.CreateModel(
            name='TestSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('score', models.FloatField(default=0)),
                ('percentage', models.FloatField(default=0, help_text='Score in percentage (0-100).')),
                ('reward_points_earned', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed')], default='in_progress', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('test_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='exams.testcard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_option', models.CharField(blank=True, choices=[('A', 'Option A'), ('B', 'Option B'), ('C', 'Option C'), ('D', 'Option D')], max_length=1, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('is_marked', models.BooleanField(default=False, help_text='Did the user explicitly mark this for review?')),
                ('mark_reason', models.CharField(blank=True, choices=[('GUESS', 'Guess'), ('TIME', 'Time Pressure'), ('CONCEPT', 'Concept Error')], help_text="The user's reason for marking the question.", max_length=10, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.question')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exams.testsubmission')),
            ],
        ),
        migrations.CreateModel(
            name='RevisionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('INCORRECT', 'Incorrect Answer'), ('MARKED_GUESS', 'Marked: Guess'), ('MARKED_TIME', 'Marked: Time Pressure'), ('MARKED_CONCEPT', 'Marked: Concept Error')], max_length=20)),
                ('source_submission_attempt', models.PositiveIntegerField()),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision_entries', to='exams.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision_log', to=settings.AUTH_USER_MODEL)),
                ('source_test_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision_sources', to='exams.testcard')),
            ],
            options={
                'unique_together': {('user', 'question', 'source_test_card', 'source_submission_attempt')},
            },
        ),
        migrations.CreateModel(
            name='UnlockedTestCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlocked_at', models.DateTimeField(auto_now_add=True)),
                ('test_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unlocked_by', to='exams.testcard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unlocked_tests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'test_card')},
            },
        ),
    ]
